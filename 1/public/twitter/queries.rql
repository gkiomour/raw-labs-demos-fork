// import the twitter function 
FROM `github://raw-labs/lib/1/public/twitter.com/twitter.rql`
  IMPORT get_tweets_search_recent;

query_str(twitterNameList: string nullable := null, keywordList: string nullable := null) := {
  // basic twitter query string generation, 
  // see: https://developer.twitter.com/en/docs/twitter-api/tweets/search/integrate/build-a-query
    IF twitterNameList is null THEN "" ELSE "(" + 
    mkstring( 
      (select "from:" + *
      from 
      split(twitterNameList,","))," OR "
    )
    + IF twitterNameList is null THEN "" ELSE ")" 
    + IF keywordList is null THEN "" ELSE "(" 
    + mkstring(split(keywordList,",")," OR ")
    + IF keywordList is null THEN "" ELSE ")" 
}

recent_tweets( twitterNameList: string := "", keywordList: string nullable := null ,maxResults: int := 100 ) := {
  get_tweets_search_recent( 
        client_id:= secret("twitter.com_clientId"),
        client_secret:= secret("twitter.com_clientSecret"),
        query:= query_str(twitterNameList,keywordList) ,
        max_results:= maxResults,
        `tweet.fields`:="id,text,geo,created_at,entities,author_id,in_reply_to_user_id,referenced_tweets",
        expansions:= "author_id",
        `user.fields`:="username,name,id"
      )
}

heads_of_govt_tweets( countries:string, keywords:string :="" ) := {
  // use wikipedia to retrieve twitter accounts from heads of government
  // parameters:
  //   countries: comma delimited list accepted
  //   keywords: comma delimited list accepted
  twitterAccounts := SELECT DISTINCT twittername
      FROM READ("https://api.raw-labs.com/examples/1/public/wikipedia/heads-of-government")
      WHERE twittername is not null
      AND countryLabel in split(countries,",");

  // iterate through the twitter accounts to query using the keywords     
  SELECT
    recent_tweets( twittername,keywords)
  FROM twittername IN twitterAccounts
}